/////////////////////////////////////////////////////////////////////
// Example files.
/////////////////////////////////////////////////////////////////////

WzdInfo.cpp -- a sample data class
WzdInfo.h

/////////////////////////////////////////////////////////////////////
// Map of Pointers
/////////////////////////////////////////////////////////////////////

// 1) include "afxtempl.h"

// 2) create map class object
	CMap<CString,LPCSTR,CWzdInfo *,CWzdInfo *> m_WzdStringToPtrMap;


// 3) to add a pointer to string map
	CWzdInfo *pInfo;
	m_WzdStringToPtrMap["them"]=new CWzdInfo("eight",10);
	m_WzdStringToPtrMap["these"]=new CWzdInfo("nine",14);
	m_WzdStringToPtrMap["those"]=new CWzdInfo("ten",14);


// 4) to iterate the map
	CString str;
	for (POSITION pos = m_WzdStringToPtrMap.GetStartPosition(); pos;)
	{
		m_WzdStringToPtrMap.GetNextAssoc(pos,str,pInfo);

		// str contains key
		// pInfo contains pointer to data

	}

// 5) to remove a pointer from map
	pInfo=m_WzdStringToPtrMap["them"];
	m_WzdStringToPtrMap.RemoveKey("them");
	// (make sure you delete this object at some point)
	delete pInfo;

// 6) to destroy this map and the objects it points to
	for (pos = m_WzdStringToPtrMap.GetStartPosition(); pos;)
	{
		m_WzdStringToPtrMap.GetNextAssoc(pos,str,pInfo);
		m_WzdStringToPtrMap.RemoveKey(str);
		delete pInfo;
	}



/////////////////////////////////////////
// Map of Classes using an Integer Key //
/////////////////////////////////////////

// 1) include "afxtempl.h"

// 2) create map class object
	CMap<int,int,CWzdInfo,CWzdInfo&> m_WzdIntToClassMap;

// 3) to add class objects to a map
	CWzdInfo info1("first",1);
	CWzdInfo info2("new",1);
	CWzdInfo info3("newer",1);
	m_WzdIntToClassMap[2]=info1;
	m_WzdIntToClassMap[3]=info2;
	m_WzdIntToClassMap[9]=info3;

// 4) to iterate the map
	int i;
	CWzdInfo info;
	for (POSITION pos = m_WzdIntToClassMap.GetStartPosition(); pos;)
	{
		m_WzdIntToClassMap.GetNextAssoc(pos,i,info);

		// i contains key
		// info contains data

	}

// 5) to remove an object from class map
	info=m_WzdIntToClassMap[3];
	m_WzdIntToClassMap.RemoveKey(3);

// 6) to destroy map of objects
	m_WzdIntToClassMap.RemoveAll(); // or just let it deconstruct itself


/////////////////////////////////////////////////////////////////////
// From: Visual C++ MFC Programming by Example by John E. Swanke
// Copyright (C) 1998 jeswanke. All rights reserved.
/////////////////////////////////////////////////////////////////////

